// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=v0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=v1);
    Mux(a=e[0], b=f[0], sel=sel[0], out=v2);
    Mux(a=g[0], b=h[0], sel=sel[0], out=v3);
    Mux(a=v0, b=v1, sel=sel[1], out=vv0);
    Mux(a=v2, b=v3, sel=sel[1], out=vv1);
    Mux(a=vv0, b=vv1, sel=sel[2], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=v4);
    Mux(a=c[1], b=d[1], sel=sel[0], out=v5);
    Mux(a=e[1], b=f[1], sel=sel[0], out=v6);
    Mux(a=g[1], b=h[1], sel=sel[0], out=v7);
    Mux(a=v4, b=v5, sel=sel[1], out=vv4);
    Mux(a=v6, b=v7, sel=sel[1], out=vv5);
    Mux(a=vv4, b=vv5, sel=sel[2], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=v8);
    Mux(a=c[2], b=d[2], sel=sel[0], out=v9);
    Mux(a=e[2], b=f[2], sel=sel[0], out=v10);
    Mux(a=g[2], b=h[2], sel=sel[0], out=v11);
    Mux(a=v8, b=v9, sel=sel[1], out=vv8);
    Mux(a=v10, b=v11, sel=sel[1], out=vv9);
    Mux(a=vv8, b=vv9, sel=sel[2], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=v12);
    Mux(a=c[3], b=d[3], sel=sel[0], out=v13);
    Mux(a=e[3], b=f[3], sel=sel[0], out=v14);
    Mux(a=g[3], b=h[3], sel=sel[0], out=v15);
    Mux(a=v12, b=v13, sel=sel[1], out=vv12);
    Mux(a=v14, b=v15, sel=sel[1], out=vv13);
    Mux(a=vv12, b=vv13, sel=sel[2], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=v16);
    Mux(a=c[4], b=d[4], sel=sel[0], out=v17);
    Mux(a=e[4], b=f[4], sel=sel[0], out=v18);
    Mux(a=g[4], b=h[4], sel=sel[0], out=v19);
    Mux(a=v16, b=v17, sel=sel[1], out=vv16);
    Mux(a=v18, b=v19, sel=sel[1], out=vv17);
    Mux(a=vv16, b=vv17, sel=sel[2], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=v20);
    Mux(a=c[5], b=d[5], sel=sel[0], out=v21);
    Mux(a=e[5], b=f[5], sel=sel[0], out=v22);
    Mux(a=g[5], b=h[5], sel=sel[0], out=v23);
    Mux(a=v20, b=v21, sel=sel[1], out=vv20);
    Mux(a=v22, b=v23, sel=sel[1], out=vv21);
    Mux(a=vv20, b=vv21, sel=sel[2], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=v24);
    Mux(a=c[6], b=d[6], sel=sel[0], out=v25);
    Mux(a=e[6], b=f[6], sel=sel[0], out=v26);
    Mux(a=g[6], b=h[6], sel=sel[0], out=v27);
    Mux(a=v24, b=v25, sel=sel[1], out=vv24);
    Mux(a=v26, b=v27, sel=sel[1], out=vv25);
    Mux(a=vv24, b=vv25, sel=sel[2], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=v28);
    Mux(a=c[7], b=d[7], sel=sel[0], out=v29);
    Mux(a=e[7], b=f[7], sel=sel[0], out=v30);
    Mux(a=g[7], b=h[7], sel=sel[0], out=v31);
    Mux(a=v28, b=v29, sel=sel[1], out=vv28);
    Mux(a=v30, b=v31, sel=sel[1], out=vv29);
    Mux(a=vv28, b=vv29, sel=sel[2], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=v32);
    Mux(a=c[8], b=d[8], sel=sel[0], out=v33);
    Mux(a=e[8], b=f[8], sel=sel[0], out=v34);
    Mux(a=g[8], b=h[8], sel=sel[0], out=v35);
    Mux(a=v32, b=v33, sel=sel[1], out=vv32);
    Mux(a=v34, b=v35, sel=sel[1], out=vv33);
    Mux(a=vv32, b=vv33, sel=sel[2], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=v36);
    Mux(a=c[9], b=d[9], sel=sel[0], out=v37);
    Mux(a=e[9], b=f[9], sel=sel[0], out=v38);
    Mux(a=g[9], b=h[9], sel=sel[0], out=v39);
    Mux(a=v36, b=v37, sel=sel[1], out=vv36);
    Mux(a=v38, b=v39, sel=sel[1], out=vv37);
    Mux(a=vv36, b=vv37, sel=sel[2], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=v40);
    Mux(a=c[10], b=d[10], sel=sel[0], out=v41);
    Mux(a=e[10], b=f[10], sel=sel[0], out=v42);
    Mux(a=g[10], b=h[10], sel=sel[0], out=v43);
    Mux(a=v40, b=v41, sel=sel[1], out=vv40);
    Mux(a=v42, b=v43, sel=sel[1], out=vv41);
    Mux(a=vv40, b=vv41, sel=sel[2], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=v44);
    Mux(a=c[11], b=d[11], sel=sel[0], out=v45);
    Mux(a=e[11], b=f[11], sel=sel[0], out=v46);
    Mux(a=g[11], b=h[11], sel=sel[0], out=v47);
    Mux(a=v44, b=v45, sel=sel[1], out=vv44);
    Mux(a=v46, b=v47, sel=sel[1], out=vv45);
    Mux(a=vv44, b=vv45, sel=sel[2], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=v48);
    Mux(a=c[12], b=d[12], sel=sel[0], out=v49);
    Mux(a=e[12], b=f[12], sel=sel[0], out=v50);
    Mux(a=g[12], b=h[12], sel=sel[0], out=v51);
    Mux(a=v48, b=v49, sel=sel[1], out=vv48);
    Mux(a=v50, b=v51, sel=sel[1], out=vv49);
    Mux(a=vv48, b=vv49, sel=sel[2], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=v52);
    Mux(a=c[13], b=d[13], sel=sel[0], out=v53);
    Mux(a=e[13], b=f[13], sel=sel[0], out=v54);
    Mux(a=g[13], b=h[13], sel=sel[0], out=v55);
    Mux(a=v52, b=v53, sel=sel[1], out=vv52);
    Mux(a=v54, b=v55, sel=sel[1], out=vv53);
    Mux(a=vv52, b=vv53, sel=sel[2], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=v56);
    Mux(a=c[14], b=d[14], sel=sel[0], out=v57);
    Mux(a=e[14], b=f[14], sel=sel[0], out=v58);
    Mux(a=g[14], b=h[14], sel=sel[0], out=v59);
    Mux(a=v56, b=v57, sel=sel[1], out=vv56);
    Mux(a=v58, b=v59, sel=sel[1], out=vv57);
    Mux(a=vv56, b=vv57, sel=sel[2], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=v60);
    Mux(a=c[15], b=d[15], sel=sel[0], out=v61);
    Mux(a=e[15], b=f[15], sel=sel[0], out=v62);
    Mux(a=g[15], b=h[15], sel=sel[0], out=v63);
    Mux(a=v60, b=v61, sel=sel[1], out=vv60);
    Mux(a=v62, b=v63, sel=sel[1], out=vv61);
    Mux(a=vv60, b=vv61, sel=sel[2], out=out[15]);
}