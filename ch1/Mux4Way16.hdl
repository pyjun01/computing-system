// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=v0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=v1);
    Mux(a=v0, b=v1, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=v2);
    Mux(a=c[1], b=d[1], sel=sel[0], out=v3);
    Mux(a=v2, b=v3, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=v4);
    Mux(a=c[2], b=d[2], sel=sel[0], out=v5);
    Mux(a=v4, b=v5, sel=sel[1], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=v6);
    Mux(a=c[3], b=d[3], sel=sel[0], out=v7);
    Mux(a=v6, b=v7, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=v8);
    Mux(a=c[4], b=d[4], sel=sel[0], out=v9);
    Mux(a=v8, b=v9, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=v10);
    Mux(a=c[5], b=d[5], sel=sel[0], out=v11);
    Mux(a=v10, b=v11, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=v12);
    Mux(a=c[6], b=d[6], sel=sel[0], out=v13);
    Mux(a=v12, b=v13, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=v14);
    Mux(a=c[7], b=d[7], sel=sel[0], out=v15);
    Mux(a=v14, b=v15, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=v16);
    Mux(a=c[8], b=d[8], sel=sel[0], out=v17);
    Mux(a=v16, b=v17, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=v18);
    Mux(a=c[9], b=d[9], sel=sel[0], out=v19);
    Mux(a=v18, b=v19, sel=sel[1], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=v20);
    Mux(a=c[10], b=d[10], sel=sel[0], out=v21);
    Mux(a=v20, b=v21, sel=sel[1], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=v22);
    Mux(a=c[11], b=d[11], sel=sel[0], out=v23);
    Mux(a=v22, b=v23, sel=sel[1], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=v24);
    Mux(a=c[12], b=d[12], sel=sel[0], out=v25);
    Mux(a=v24, b=v25, sel=sel[1], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=v26);
    Mux(a=c[13], b=d[13], sel=sel[0], out=v27);
    Mux(a=v26, b=v27, sel=sel[1], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=v28);
    Mux(a=c[14], b=d[14], sel=sel[0], out=v29);
    Mux(a=v28, b=v29, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=v30);
    Mux(a=c[15], b=d[15], sel=sel[0], out=v31);
    Mux(a=v30, b=v31, sel=sel[1], out=out[15]);
}